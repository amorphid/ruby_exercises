# Note: we're looking for Ruby commands for the below questions, not the
# actual answers, unless it's a question.

# Hint: you can type "irb" in your terminal to get a Ruby console to test
# things out. For multi-line code, use an editor that can run Ruby code, or
# copy/paste into irb.

# Hint 2: you can refer to the Ruby doc for Array and Hash here:

# http://www.ruby-doc.org/core-1.9.3/Array.html
# http://www.ruby-doc.org/core-1.9.3/Hash.html


# 1. Use the "each" method of Array to iterate over
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], and print out each value.

  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].each { |i| puts i }

# 2. Same as above, but only print out values greater than 5.

  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].each { |i|  puts i if i > 5 }

# 3. Now, using the same array from #2, use the "select" method to extract all
# odd numbers into a new array.

  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].select { |i| i.odd? }

# 4. Append "11" to the end of the array. Prepend "0" to the beginning.

  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].each { |i|  puts i if i > 5 }

# 5. Get rid of "11". And append a "3".

  array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  array.push(11)
  array.unshift(0)

# 6. Get rid of duplicates without specifically removing any one value.

  [1,1,1,2,2,2,3,4,5,6,7].uniq

# 7. What's the major difference between an Array and a Hash?

  Array elements are indexed by their position in the array.
  Hash elements are indexed by a key.

# 8. Create a Hash using both Ruby 1.8 and 1.9 syntax.

  { :ruby => '1.8' }
  { ruby: '1.9' }

# Suppose you have a h = {a:1, b:2, c:3, d:4}

  # 9. Get the value of key "b".

    h[:b]

  # 10. Add to this hash the key:value pair {e:5}

    h[:e] = 5

  # 13. Remove all key:value pairs whose value is less than 3.5

    h.delete_if { |k,v| v < 3.5 }

  # 14. Can hash values be arrays? Can you have an array of hashes? (give
  # examples)

    { foo: ["b", "a", "r"] }
    [ 1, 2, 3, {foo: "bar"} ]

  # 15. Look at several Rails/Ruby online API sources and say which one your like
  # best and why.

    At the risk of not answering the question, I like Google.  I don't rely on
    a single source.  I suppose ruby_doc.org is the site I use the most.
